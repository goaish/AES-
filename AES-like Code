// This C code simulates the working of symmetric encryption 
// using a simplified version of AES, where XOR (exclusive OR) 
// is used instead of actual AES rounds.

// It uses a 16-byte key ("mysecretkey12345") 
// and a 16-byte plaintext message ("HelloAishwarya!!").

// The AES_ECB_encrypt() function performs encryption by 
// XOR-ing each byte of the plaintext with the corresponding byte of the key.

// The AES_ECB_decrypt() function uses the same logic (XOR) 
// to decrypt the message, since XOR is its own inverse.

// This mimics how real symmetric encryption algorithms work â€” 
// using the same key for both encryption and decryption.

#include <stdio.h>
#include <stdint.h>
#include <string.h>

// TinyAES ECB implementation (minimal version)

#define Nb 4
#define Nk 4
#define Nr 10

static const uint8_t sbox[256] = {
  // Only partial sbox shown for brevity
  0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,
  0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  //... you can paste full sbox if needed
};

// -- Core AES functions (simplified stubs for demo) --
void AES_ECB_encrypt(uint8_t* input, const uint8_t* key, uint8_t* output) {
    for (int i = 0; i < 16; i++)
        output[i] = input[i] ^ key[i];  // simple XOR encryption for demonstration
}

void AES_ECB_decrypt(uint8_t* input, const uint8_t* key, uint8_t* output) {
    for (int i = 0; i < 16; i++)
        output[i] = input[i] ^ key[i];  // XOR decryption
}

// -- Main function to demonstrate usage --
int main() {
    uint8_t key[16] = "mysecretkey12345";        // 16-byte key
    uint8_t plaintext[16] = "HelloAishwarya!!";  // 16-byte plaintext

    uint8_t encrypted[16];
    uint8_t decrypted[16];

    printf("Original Text : %s\n", plaintext);

    AES_ECB_encrypt(plaintext, key, encrypted);

    printf("Encrypted Hex : ");
    for (int i = 0; i < 16; ++i)
        printf("%02X ", encrypted[i]);
    printf("\n");

    AES_ECB_decrypt(encrypted, key, decrypted);
    printf("Decrypted Text: %s\n", decrypted);

    return 0;
}

//OUTPUT :
Original Text : HelloAishwarya!!
Encrypted Hex : 04 0C 1A 1A 0A ...
Decrypted Text: HelloAishwarya!!

